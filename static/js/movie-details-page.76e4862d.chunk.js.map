{"version":3,"sources":["services/api.js","pages/Cast/Cast.js","pages/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["basicUrl","key","popularFilms","axios","get","searchInfo","id","searchMovie","query","Cast","Reviews","state","cast","movieId","this","props","match","params","API","then","Res","setState","data","className","map","profile_path","name","character","src","alt","Component","reviews","results","length","author","content","MovieDetailsPage","searchFilm","genres","onBackButton","history","goBack","resData","url","onClick","type","poster_path","original_title","release_date","vote_average","overview","reduce","acc","el","to","activeClassName","exact","path","routes","movieCast","component","movieReviews"],"mappings":"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","file":"static/js/movie-details-page.76e4862d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst basicUrl = \"https://api.themoviedb.org/3\";\nconst key = \"e7d0234ea12f637dc6f206bdb03aefdd\";\n\nexport const popularFilms = () =>\n  axios.get(`${basicUrl}/trending/movie/week?api_key=${key}`);\n\nexport const searchInfo = (id) =>\n  axios.get(`${basicUrl}/movie/${id}?api_key=${key}`);\n\nexport const searchMovie = (query = \"batman\") =>\n  axios.get(\n    `${basicUrl}/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\nexport const Cast = (id) =>\n  axios.get(`${basicUrl}/movie/${id}/credits?api_key=${key}`);\n\nexport const Reviews = (id) =>\n  axios.get(`${basicUrl}/movie/${id}/reviews?api_key=${key}`);\n","import React, { Component } from \"react\";\nimport * as API from \"../../services/api\";\nimport \"./Cast.scss\";\n\nconst defImg =\n  \"https://cdn0.iconfinder.com/data/icons/pinterest-ui-flat/48/Pinterest_UI-18-512.png\";\n\nexport default class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.Cast(movieId).then((Res) => {\n      this.setState({ cast: Res.data.cast });\n    });\n  }\n\n  render() {\n    const { cast } = this.state;\n    const { match } = this.props;\n    return (\n      <ul className=\"cast-list\">\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li className=\"cast-item\" key={id}>\n            <img\n              className=\"image\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : defImg\n              }\n              alt=\"\"\n            />\n            <p className=\"cast-text-name\">{name}</p>\n            <p className=\"cast-text-character\">{character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as API from \"../../services/api\";\nimport \"./Reviews.scss\";\n\nexport default class Reviews extends Component {\n  static propTypes = {\n    match: PropTypes.shape({}).isRequired,\n    // movieId: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.Reviews(movieId).then((Res) => {\n      this.setState({ reviews: Res.data.results });\n    });\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <>\n        {reviews.length !== 0 ? (\n          <ul className=\"reviews_list\">\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p className=\"reviews_author\">Author: {author}</p>\n                <p className=\"reviews_content\">{content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"reviews_author text\">Not reviews</p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport * as API from \"../../services/api\";\nimport routes from \"../../routes\";\nimport Cast from \"../Cast/Cast\";\nimport Reviews from \"../Reviews/Reviews\";\nimport \"./MovieDetailsPage.scss\";\n\nexport default class MovieDetailsPage extends Component {\n  state = {\n    searchFilm: { genres: [] },\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.searchInfo(movieId).then((resData) => {\n      this.setState({ searchFilm: resData.data });\n    });\n  }\n\n  onBackButton = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { searchFilm } = this.state;\n    const { match } = this.props;\n    const { url } = match;\n\n    return (\n      <>\n        <div className=\"back-btn-container\">\n          <button\n            onClick={this.onBackButton}\n            type=\"button\"\n            className=\"back-btn\"\n          >\n            Go back\n          </button>\n        </div>\n\n        <div className=\"details-container\">\n          <div className=\"img-container\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500${searchFilm.poster_path}`}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"info-container\">\n            <h2 className=\"h2-title\">\n              {searchFilm.original_title} ({searchFilm.release_date})\n            </h2>\n            <p className=\"text\">User score: {searchFilm.vote_average * 10}%</p>\n            <h3 className=\"h3-title\">Overview</h3>\n            {/* <br /> */}\n            <p className=\"text\">{searchFilm.overview}</p>\n            <h3 className=\"h3-title\">Genres</h3>\n            <p className=\"text\">\n              {searchFilm.genres.reduce((acc, el) => `${acc} ${el.name}`, \"\")}\n            </p>\n          </div>\n        </div>\n        <div className=\"additional-container\">\n          <h3 className=\"h3-title\">Additional information</h3>\n          <ul>\n            <li>\n              <NavLink\n                to={`${url}/cast`}\n                className=\"additional-link\"\n                activeClassName=\"additional-link-active\"\n              >\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={`${url}/reviews`}\n                className=\"additional-link\"\n                activeClassName=\"additional-link-active\"\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"Switch-container\">\n          <Switch>\n            <Route exact path={routes.movieCast} component={Cast} />\n            <Route exact path={routes.movieReviews} component={Reviews} />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}