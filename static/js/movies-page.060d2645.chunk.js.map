{"version":3,"sources":["services/api.js","SearchForm/SearchForm.js","pages/MoviesPage/MoviesPage.js"],"names":["basicUrl","key","popularFilms","axios","get","searchInfo","id","searchMovie","query","Cast","Reviews","SearchForm","state","input","onChange","e","setState","target","value","handleSubmit","preventDefault","onSubmit","props","this","className","type","placeholder","Component","MoviesPage","searchFilms","history","API","then","resData","data","results","push","pathname","search","location","getMovies","URLSearchParams","map","el","to","routes","movies","title"],"mappings":"yIAAA,+LAEMA,EAAW,+BACXC,EAAM,mCAECC,EAAe,kBAC1BC,IAAMC,IAAN,UAAaJ,EAAb,wCAAqDC,KAE1CI,EAAa,SAACC,GAAD,OACxBH,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BM,EAA/B,oBAA6CL,KAElCM,EAAc,eAACC,EAAD,uDAAS,SAAT,OACzBL,IAAMC,IAAN,UACKJ,EADL,iCACsCC,EADtC,4DAC6FO,KAGlFC,EAAO,SAACH,GAAD,OAClBH,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BM,EAA/B,4BAAqDL,KAE1CS,EAAU,SAACJ,GAAD,OACrBH,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BM,EAA/B,4BAAqDL,M,0LCjBlCU,E,4MACnBC,MAAQ,CACNC,MAAO,I,EAGTC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,OAAOC,S,EAGlCC,aAAe,SAACJ,GACdA,EAAEK,kBAGFC,EAFqB,EAAKC,MAAlBD,UAEC,EAAKT,MAAMC,OACpB,EAAKG,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,IAAQK,EAAUK,KAAKX,MAAfM,MACR,OACE,8BACE,uBAAMG,SAAUE,KAAKJ,aAAcK,UAAU,cAA7C,UACE,uBACEN,MAAOA,EACPJ,SAAUS,KAAKT,SACfW,KAAK,OACLC,YAAY,cACZF,UAAU,iBAEZ,wBAAQC,KAAK,SAASD,UAAU,aAAhC,SACE,0D,GA9B4BG,a,eCKnBC,G,kNAMnBhB,MAAQ,CACNJ,MAAO,GACPqB,YAAa,I,EAYfR,SAAW,SAACb,GACV,IAAQsB,EAAY,EAAKR,MAAjBQ,QACR,EAAKd,SAAS,CAAER,UAChBuB,IAAgBvB,GAAOwB,MAAK,SAACC,GAC3B,EAAKjB,SAAS,CAAEa,YAAaI,EAAQC,KAAKC,aAE5CL,EAAQM,KAAK,CACXC,SAAUP,EAAQO,SAClBC,OAAO,SAAD,OAAW9B,M,uDAjBrB,WACE,IAAQ+B,EAAahB,KAAKD,MAAlBiB,SACFC,EAAY,IAAIC,gBAAgBF,EAASD,QAAQlC,IAAI,SACtDoC,GAGLjB,KAAKF,SAASmB,K,oBAehB,WACE,MAA+BjB,KAAKX,MAArBiB,GAAf,EAAQrB,MAAR,EAAeqB,aACf,OACE,gCACE,cAAC,EAAD,CAAYR,SAAUE,KAAKF,WAC3B,oBAAIG,UAAU,cAAd,SACGK,EAAYa,KAAI,SAACC,GAAD,OACf,oBAAgBnB,UAAU,cAA1B,SACE,cAAC,IAAD,CAASoB,GAAE,UAAKC,IAAOC,OAAZ,YAAsBH,EAAGrC,IAAMkB,UAAU,cAApD,SACGmB,EAAGI,SAFCJ,EAAGrC,gB,GAvCgBqB","file":"static/js/movies-page.060d2645.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst basicUrl = \"https://api.themoviedb.org/3\";\nconst key = \"e7d0234ea12f637dc6f206bdb03aefdd\";\n\nexport const popularFilms = () =>\n  axios.get(`${basicUrl}/trending/movie/week?api_key=${key}`);\n\nexport const searchInfo = (id) =>\n  axios.get(`${basicUrl}/movie/${id}?api_key=${key}`);\n\nexport const searchMovie = (query = \"batman\") =>\n  axios.get(\n    `${basicUrl}/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\nexport const Cast = (id) =>\n  axios.get(`${basicUrl}/movie/${id}/credits?api_key=${key}`);\n\nexport const Reviews = (id) =>\n  axios.get(`${basicUrl}/movie/${id}/reviews?api_key=${key}`);\n","import React, { Component } from \"react\";\nimport \"./SearchForm.scss\";\n\nexport default class SearchForm extends Component {\n  state = {\n    input: \"\",\n  };\n\n  onChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.input);\n    this.setState({ input: \"\" });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"search-form\">\n          <input\n            value={value}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Search film\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-btn\">\n            <span>Search film</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport SearchForm from \"../../SearchForm\";\nimport * as API from \"../../services/api\";\nimport routes from \"../../routes\";\nimport \"./MoviesPage.scss\";\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    query: \"\",\n    searchFilms: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const getMovies = new URLSearchParams(location.search).get(\"query\");\n    if (!getMovies) {\n      return;\n    }\n    this.onSubmit(getMovies);\n  }\n\n  onSubmit = (query) => {\n    const { history } = this.props;\n    this.setState({ query });\n    API.searchMovie(query).then((resData) => {\n      this.setState({ searchFilms: resData.data.results });\n    });\n    history.push({\n      pathname: history.pathname,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    const { query, searchFilms } = this.state;\n    return (\n      <div>\n        <SearchForm onSubmit={this.onSubmit} />\n        <ul className=\"movies-list\">\n          {searchFilms.map((el) => (\n            <li key={el.id} className=\"movies-item\">\n              <NavLink to={`${routes.movies}/${el.id}`} className=\"movies-link\">\n                {el.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}